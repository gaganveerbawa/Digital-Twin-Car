#include <VirtualWire.h>

// Motor pins
int m1 = 4;
int m2 = 5;
int m3 = 6;
int m4 = 7;

char input;
char *data;

void setup() {
  // Set motor pins as outputs
  pinMode(m1, OUTPUT);
  pinMode(m2, OUTPUT);
  pinMode(m3, OUTPUT);
  pinMode(m4, OUTPUT);

  // Initialize serial communication
  Serial.begin(9600);

  // Set transmitter pin and setup virtual wire communication
  vw_set_tx_pin(3);
  vw_setup(2000);

  // Stop the car initially
  stop();
}

void loop() {
  // Check if data is available on the serial port
  if (Serial.available()) {
    input = Serial.read();
    Serial.println(input);

    // Based on the received input, perform actions and send corresponding data
    if (input == 'F') {
      data = "f"; // Data to be sent
      vw_send((uint8_t *)data, strlen(data)); // Send data wirelessly
      vw_wait_tx();
      forward(); // Move the car forward
    } else if (input == 'R') {
      data = "r";
      vw_send((uint8_t *)data, strlen(data));
      vw_wait_tx();
      right(); // Turn the car right
    } else if (input == 'L') {
      data = "l";
      vw_send((uint8_t *)data, strlen(data));
      vw_wait_tx();
      left(); // Turn the car left
    } else if (input == 'G') {
      data = "g";
      vw_send((uint8_t *)data, strlen(data));
      vw_wait_tx();
      backward(); // Move the car backward
    } else if (input == 'S') {
      data = "s";
      vw_send((uint8_t *)data, strlen(data));
      vw_wait_tx();
      stop(); // Stop the car
    }
  }
}

// Perform specific actions for different car movements
void right() {
  digitalWrite(m1, HIGH);
  digitalWrite(m2, LOW);
  digitalWrite(m3, HIGH);
  digitalWrite(m4, LOW);
}

void stop() {
  digitalWrite(m1, LOW);
  digitalWrite(m2, LOW);
  digitalWrite(m3, LOW);
  digitalWrite(m4, LOW);
}

void left() {
  digitalWrite(m1, LOW);
  digitalWrite(m2, HIGH);
  digitalWrite(m3, LOW);
  digitalWrite(m4, HIGH);
}

void forward() {
  digitalWrite(m1, LOW);
  digitalWrite(m2, HIGH);
  digitalWrite(m3, HIGH);
  digitalWrite(m4, LOW);
}

void backward() {
  digitalWrite(m2, LOW);
  digitalWrite(m1, HIGH);
  digitalWrite(m3, LOW);
  digitalWrite(m4, HIGH);
}
