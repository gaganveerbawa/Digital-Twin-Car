#include <VirtualWire.h>

int m1 = 4;  // Motor pin 1
int m2 = 5;  // Motor pin 2
int m3 = 6;  // Motor pin 3
int m4 = 7;  // Motor pin 4

char input;    // Variable to store received input
char *data;    // Pointer to store data to be sent

void setup() {
  pinMode(m1, OUTPUT);  // Set motor pin 1 as output
  pinMode(m2, OUTPUT);  // Set motor pin 2 as output
  pinMode(m3, OUTPUT);  // Set motor pin 3 as output
  pinMode(m4, OUTPUT);  // Set motor pin 4 as output

  Serial.begin(9600);  // Initialize serial communication

  vw_set_rx_pin(3);    // Set the receiver pin
  vw_setup(2000);      // Set up communication speed
  pinMode(3, INPUT);   // Set the receiver pin as input
  vw_rx_start();       // Start receiving data

  stop();              // Stop the car initially
}

void loop() {
  uint8_t buf[VW_MAX_MESSAGE_LEN];  // Buffer to store received data
  uint8_t buflen = VW_MAX_MESSAGE_LEN;  // Length of received data

  Serial.println(buf[0]);  // Print the first character of received data

  if (vw_get_message(buf, &buflen)) {  // Check if a message is received
    if (buf[0] == 'f') {
      forward();  // Move the car forward
    } else if (buf[0] == 'g') {
      backward();  // Move the car backward
    } else if (buf[0] == 'l') {
      left();  // Turn the car left
    } else if (buf[0] == 'r') {
      right();  // Turn the car right
    } else if (buf[0] == 's') {
      stop();  // Stop the car
    }
  }
}

// Move the car forward
void forward() {
  digitalWrite(m1, HIGH);
  digitalWrite(m2, LOW);
  digitalWrite(m3, HIGH);
  digitalWrite(m4, LOW);
}

// Stop the car
void stop() {
  digitalWrite(m1, LOW);
  digitalWrite(m2, LOW);
  digitalWrite(m3, LOW);
  digitalWrite(m4, LOW);
}

// Move the car backward
void backward() {
  digitalWrite(m1, LOW);
  digitalWrite(m2, HIGH);
  digitalWrite(m3, LOW);
  digitalWrite(m4, HIGH);
}

// Turn the car right
void right() {
  digitalWrite(m1, LOW);
  digitalWrite(m2, HIGH);
  digitalWrite(m3, HIGH);
  digitalWrite(m4, LOW);
}

// Turn the car left
void left() {
  digitalWrite(m1, HIGH);
  digitalWrite(m2, LOW);
  digitalWrite(m3, LOW);
  digitalWrite(m4, HIGH);
}
